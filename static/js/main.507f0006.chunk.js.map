{"version":3,"sources":["App.module.css","components/Button.js","components/Input.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Button","title","disabled","onClick","text","type","styles","className","Input","value","name","id","onChange","min","max","checked","App","options","useState","password","setPassword","lengthPassword","setLengthPassword","Array","length","fill","checkedOptions","setCheckedOptions","strOptions","setStrOptions","disable","setDisable","unique","setUnique","message","setMessage","generationUnique","string","passwordGeneration","counter","item","charAt","Math","floor","random","includes","push","join","alertMassage","generation","i","generationSimple","useEffect","every","option","container","copy","navigator","clipboard","writeText","copyPassword","slider","event","target","input_label","htmlFor","input_label_span","input_unique","input_unique_label","input_unique_span","options_list","map","index","options_list_item","checkbox","position","updatedCheckedOptions","updatedStrOptions","reduce","sum","currentState","handleCheckbox","checkbox_label","create","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.507f0006.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"title\":\"App_title__-GfWs\",\"password\":\"App_password__3skuH\",\"message\":\"App_message__2vrzR\",\"create\":\"App_create__1XE2w\",\"copy\":\"App_copy__1miwG\",\"slider\":\"App_slider__2X9cc\",\"input_label\":\"App_input_label__1qRa2\",\"input_label_span\":\"App_input_label_span__CRHg8\",\"options_list\":\"App_options_list__1RtNY\",\"options_list_item\":\"App_options_list_item__1-mX8\",\"checkbox\":\"App_checkbox__2FuXu\",\"checkbox_label\":\"App_checkbox_label__BEZLB\",\"input_unique\":\"App_input_unique__3WEqR\",\"switch__1\":\"App_switch__1__39lBo\",\"input_unique_label\":\"App_input_unique_label__2VV4r\",\"input_unique_span\":\"App_input_unique_span__3gSQM\",\"button_create\":\"App_button_create__2G3bR\",\"button_copy\":\"App_button_copy__1n_WS\"};","import React from \"react\";\n\nfunction Button({ title, disabled, onClick, text, type, styles }) {\n  return (\n    <button\n      type={type}\n      className={styles}\n      title={title}\n      disabled={disabled}\n      onClick={onClick}\n    >\n      {text}\n    </button>\n  );\n}\n\nexport default Button;\n","import React from \"react\";\n\nfunction Input({ value, name, id, type, onChange, min, max, styles, checked }) {\n  return (\n    <input\n      className={styles}\n      type={type}\n      id={id}\n      name={name}\n      value={value}\n      onChange={onChange}\n      min={min}\n      max={max}\n      checked={checked}\n    ></input>\n  );\n}\n\nexport default Input;\n","import { useState, useEffect } from \"react\";\nimport styles from \"./App.module.css\";\nimport Button from \"./components/Button\";\nimport Input from \"./components/Input\";\n\nfunction App() {\n  const options = [\n    {\n      name: \"Нижний регистр\",\n      value: \"abcdefghijklmnopqrstuvwxyz\",\n    },\n    {\n      name: \"Верний регистр\",\n      value: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n    },\n    {\n      name: \"Цифры\",\n      value: \"0123456789\",\n    },\n    {\n      name: \"Символы\",\n      value: \"!@#$%^&*()\",\n    },\n  ];\n  /* Результат генерации */\n  const [password, setPassword] = useState(\"\");\n  /* Длина пароля */\n  const [lengthPassword, setLengthPassword] = useState(8);\n  /* Выбранные опции */\n  const [checkedOptions, setCheckedOptions] = useState(\n    new Array(options.length).fill(false)\n  );\n  /* Строка с выбранными опциями для генератора */\n  const [strOptions, setStrOptions] = useState(\"\");\n  /* Проверка опций / Активация кнопки генерации */\n  const [disable, setDisable] = useState(true);\n  /* Уникальные значения */\n  const [unique, setUnique] = useState(false);\n  /* Сообщения */\n  const [message, setMessage] = useState(\"\");\n\n  /* Обрабочик Checkbox */\n  const handleCheckbox = (position) => {\n    const updatedCheckedOptions = checkedOptions.map((item, index) =>\n      index === position ? !item : item\n    );\n\n    setCheckedOptions(updatedCheckedOptions);\n\n    const updatedStrOptions = updatedCheckedOptions.reduce(\n      (sum, currentState, index) => {\n        if (currentState === true) {\n          return sum + options[index].value;\n        }\n        return sum;\n      },\n      \"\"\n    );\n    setStrOptions(updatedStrOptions);\n  };\n\n  /* Обрабочик длины пароля */\n  function handleLengthPassword(event) {\n    setLengthPassword(event.target.value);\n  }\n  /* Обрабочик уникальных символов */\n  function handleUnique() {\n    setUnique(!unique);\n  }\n\n  function alertMassage(string) {\n    lengthPassword > string.length\n      ? setMessage(`Сделать длиннее ${string.length} символов не получится`)\n      : setMessage(\"\");\n  }\n\n  /* Функция генерации простого пароля */\n  function generationSimple(string) {\n    let passwordGeneration = [];\n    for (var i = 0; i < lengthPassword; ++i) {\n      passwordGeneration += string.charAt(\n        Math.floor(Math.random() * string.length)\n      );\n    }\n    setPassword(passwordGeneration);\n  }\n  /* Функция генерации пароля с неповторяющимися символами */\n  function generationUnique(string) {\n    let passwordGeneration = [];\n    for (\n      let counter = 0;\n      counter <\n      (lengthPassword < string.length ? lengthPassword : string.length);\n      counter++\n    ) {\n      let item;\n      do {\n        item = string.charAt(Math.floor(Math.random() * string.length));\n      } while (passwordGeneration.includes(item));\n      passwordGeneration.push(item);\n    }\n    setPassword(passwordGeneration.join(\"\"));\n    alertMassage(string);\n  }\n\n  /* Функция обработки выбора режима для генерации пароля */\n  const generation = (string) =>\n    unique ? generationUnique(string) : generationSimple(string);\n\n  /* Функция копирования пароля в буфер обмена */\n  function copyPassword(password) {\n    navigator.clipboard.writeText(password);\n  }\n\n  useEffect(() => {\n    setDisable(checkedOptions.every((option) => option === false));\n    setMessage(\"\");\n  }, [checkedOptions, lengthPassword]);\n\n  return (\n    <article className={styles.container}>\n      <h1 className={styles.title}>Генератор паролей</h1>\n      <p className={styles.password} id=\"password\">\n        {password}{\" \"}\n      </p>\n      <span className={styles.message}>{message}</span>\n\n      <Button\n        type={\"button\"}\n        styles={styles.copy}\n        title={\"Копировать\"}\n        disabled={!password}\n        onClick={() => copyPassword(password)}\n        text={\"Копировать\"}\n      />\n\n      <div className={styles.slider}>\n        <Input\n          type={\"range\"}\n          id={\"length\"}\n          name={\"length\"}\n          value={lengthPassword}\n          onChange={handleLengthPassword}\n          min={\"1\"}\n          max={\"50\"}\n        />\n        <label className={styles.input_label} htmlFor=\"length\">\n          Длина пароля&nbsp;\n          <span className={styles.input_label_span}>{lengthPassword}</span>\n        </label>\n      </div>\n\n      <div className={styles.input_unique}>\n        <Input\n          type={\"checkbox\"}\n          id={\"unique\"}\n          name={\"unique\"}\n          value={unique}\n          onChange={handleUnique}\n        />\n        <label className={styles.input_unique_label} htmlFor=\"unique\"></label>\n        <span className={styles.input_unique_span}>Символы не повторяются</span>\n      </div>\n\n      <ul className={styles.options_list}>\n        {options.map(({ name }, index) => {\n          return (\n            <li key={index}>\n              <div className={styles.options_list_item}>\n                <Input\n                  styles={styles.checkbox}\n                  type={\"checkbox\"}\n                  id={`custom-checkbox-${index}`}\n                  name={name}\n                  value={name}\n                  checked={checkedOptions[index]}\n                  onChange={() => handleCheckbox(index)}\n                />\n                <label\n                  className={styles.checkbox_label}\n                  htmlFor={`custom-checkbox-${index}`}\n                >\n                  {name}\n                </label>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n      <Button\n        type={\"button\"}\n        styles={styles.create}\n        title={\"Создать\"}\n        disabled={disable}\n        onClick={() => generation(strOptions)}\n        text={\"Создать\"}\n      />\n    </article>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n"],"sourceRoot":""}